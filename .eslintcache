[{"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/index.js":"1","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/App.js":"2","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/user.js":"3","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/accordian.js":"4","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/sreach.js":"5","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/dropdown.js":"6","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/translate.js":"7","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/dropdown2.js":"8","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/convert.js":"9"},{"size":146,"mtime":1609852357751,"results":"10","hashOfConfig":"11"},{"size":1329,"mtime":1611414620095,"results":"12","hashOfConfig":"11"},{"size":502,"mtime":1609959381997,"results":"13","hashOfConfig":"11"},{"size":1426,"mtime":1611149892739,"results":"14","hashOfConfig":"11"},{"size":3676,"mtime":1611139027763,"results":"15","hashOfConfig":"11"},{"size":2463,"mtime":1611407485770,"results":"16","hashOfConfig":"11"},{"size":1002,"mtime":1611415868164,"results":"17","hashOfConfig":"11"},{"size":1479,"mtime":1611407914427,"results":"18","hashOfConfig":"11"},{"size":707,"mtime":1611417062138,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"eatrsa",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/index.js",[],["43","44"],"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/App.js",["45","46","47","48","49"],"import React, { useState } from \"react\";\nimport \"./style.css\";\nimport Accordian from \"./components/accordian.js\";\nimport Sreach from \"./components/sreach.js\";\nimport Dropdown from \"./components/dropdown.js\";\nimport Dropdown2 from \"./components/dropdown2.js\";\nimport Translate from \"./components/translate.js\";\n\nconst items = [\n  {\n    title: \"what is react?\",\n    content: \"react is front end javascript framework\",\n  },\n  {\n    title: \" why use react?\",\n    content: \"react is popular framework around devs\",\n  },\n  {\n    title: \"how to use react?\",\n    content: \"check out the documentation\",\n  },\n];\n\nconst options = [\n  { label: \"color Red\", value: \"#F4869C\" },\n  { label: \"color green\", value: \"#8AFF8A\" },\n  { label: \"color blue\", value: \"#006469\" },\n];\n// function componentWillMount() {\n//   document.body.style.color = \"green\";\n// }\n\n// function componentWillUnmount() {\n//   document.body.style.Color = null;\n// }\nexport default () => {\n  // const color = { color: selected.value };\n  const [selected, setSelected] = useState(options[0]);\n  document.body.style.backgroundColor = selected.value;\n  return (\n    <div>\n      <div style={{ margin: \"240px\" }} className=\"ui segment\">\n        <Dropdown selected={selected} setSelected={setSelected} options={options} />\n\n        <Translate />\n      </div>\n    </div>\n  );\n};\n","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/user.js",[],["50","51"],"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/accordian.js",["52"],"import React, { useState } from \"react\";\nconst Accordian = ({ items }) => {\n  const [numb, setNumb] = useState(null);\n  const stuff = items.map((a, index) => {\n    const open = () => {\n      return numb === index ? \"active\" : \"\";\n    };\n    return (\n      <React.Fragment key={a.title}>\n        <div onClick={() => setNumb(index)} className={\"title \" + open()}>\n          <i className={\"dropdown icon \"}></i>\n          {a.title}\n        </div>\n        <div className={`content  ${open()}`}>\n          <p>{a.content}</p>\n        </div>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <div className=\"ui styled accordion\">\n      {stuff}\n      <h1></h1>\n    </div>\n  );\n};\n\nexport default Accordian;\n/* const Accordian = ({ items }) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n  const renderedItems = items.map((item, index) => {\n    const onTitleClick = (index) => {\n      setActiveIndex(index);\n      console.log(\"title clicked\", index);\n    };\n    return (\n      <React.Fragment key={item.title}>\n        <div onClick={() => onTitleClick(index)} className=\"title active\">\n          <i className=\"dropdown icon\"></i>\n          {item.title}\n        </div>\n        <div className=\"content active\">\n          <p>{item.title}</p>\n        </div>\n      </React.Fragment>\n    );\n  });\n  return (\n    <div className=\"ui styled accordion\">\n      {renderedItems}\n      <h1>{activeIndex}</h1>\n    </div>\n  );\n};\n */\n","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/sreach.js",["53","54"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport dompurify from \"dompurify\";\n\nconst Sreach = () => {\n  const [term, setTerm] = useState(\"\");\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    const sreach = async () => {\n      const stuff = await axios.get(\"https://en.wikipedia.org/w/api.php\", {\n        params: {\n          action: \"query\",\n          format: \"json\",\n          origin: \"*\",\n          list: \"search\",\n          srsearch: term,\n        },\n      });\n\n      setList(stuff.data.query.search);\n    };\n    if (term && !list.length) {\n      sreach();\n    }\n    if (!term) {\n      setList([]);\n    } else {\n      const setTimeoutId = setTimeout(() => {\n        return term ? sreach() : \"loading\";\n      }, 1000);\n      return () => {\n        clearTimeout(setTimeoutId);\n      };\n    }\n  }, [term]);\n  const renderedlist = list.map((l) => {\n    return (\n      <div key={l.pageid} className=\"item\">\n        <div className=\"content\">\n          <div className=\"header\">{l.title}</div>\n          <div dangerouslySetInnerHTML={{ __html: l.snippet }} />\n          <div className=\"right floated content\">\n            <a className=\"ui button\" href={`http://en.wikipedia.org/?curid=${l.pageid}`}>\n              go\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <div>\n      <div className=\"ui form\">\n        <div className=\"field\">\n          <label>enter sreach term</label>\n          <input value={term} onChange={(e) => setTerm(e.target.value)} className=\"input\"></input>\n        </div>\n      </div>\n      <div className=\"ui celled list\"> {renderedlist}</div>\n    </div>\n  );\n};\n\nexport default Sreach;\n// IF TERM IS PRESENT AND WE DOT HAVE RESULT YET\n/* if (term && !list.length) {\n    sreach();\n  } else {\n    const setTimeoutId = setTimeout(() => {\n      return term ? sreach() : \"loading\";\n    }, 5000);\n    return () => {\n      clearTimeout(setTimeoutId);\n    };\n  }\n}\n */\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import dompurify from \"dompurify\";\n\n// const Sreach = () => {\n//   const [term, setTerm] = useState(\"\");\n//   const [list, setList] = useState([]);\n//   console.log(list);\n//   useEffect(() => {\n//     const result = async () => {\n//       const { data } = await axios.get(\"https://en.wikipedia.org/w/api.php\t\", {\n//         params: {\n//           action: \"query\",\n//           list: \"search\",\n//           origin: \"*\",\n//           format: \"json\",\n\n//           srsearch: term,\n//         },\n//       });\n//       setTimeout(() => setList(data.query.search), 500);\n//     };\n//     return term ? result() : \"loading\";\n//   }, [term]);\n\n//   const renderedstuff = list.map((i) => {\n//     const sanitizer = dompurify.sanitize;\n//     return (\n//       <div key={i.pageid} className=\"item\">\n//         <div className=\"content\">\n//           <div className=\"header\">{i.title}</div>\n//           <div dangerouslySetInnerHTML={{ __html: sanitizer(i.snippet) }} />\n//           <div className=\"right floated content\">\n//             <a className=\"ui button\" href={`http://en.wikipedia.org/?curid=${i.pageid}`}>\n//               go\n//             </a>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   });\n//   return (\n//     <div>\n//       <div className=\"ui form\">\n//         <div className=\"field\">\n//           <label>enter sreach term</label>\n//           <input value={term} onChange={(e) => setTerm(e.target.value)} className=\"input\"></input>\n//         </div>\n//       </div>\n//       <div className=\"ui celled list\"> {renderedstuff}</div>\n//     </div>\n//   );\n// };\n\n// export default Sreach;\n","/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/dropdown.js",[],"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/translate.js",["55"],"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/dropdown2.js",[],"/Users/durcak/Desktop/treehouse/reac - udemy/widgets/src/components/convert.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":14},{"ruleId":"60","severity":1,"message":"65","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":17},{"ruleId":"60","severity":1,"message":"66","line":9,"column":7,"nodeType":"62","messageId":"63","endLine":9,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":36,"column":1,"nodeType":"69","endLine":49,"endColumn":3},{"ruleId":"56","replacedBy":"70"},{"ruleId":"58","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":7,"nodeType":"74","endLine":24,"endColumn":11},{"ruleId":"60","severity":1,"message":"75","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":17},{"ruleId":"76","severity":1,"message":"77","line":36,"column":6,"nodeType":"78","endLine":36,"endColumn":12,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":30,"column":7,"nodeType":"74","endLine":30,"endColumn":33},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Accordian' is defined but never used.","Identifier","unusedVar","'Sreach' is defined but never used.","'Dropdown2' is defined but never used.","'items' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["80"],["81"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'dompurify' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'list.length'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [list.length, term]",{"range":"85","text":"86"},[849,855],"[list.length, term]"]